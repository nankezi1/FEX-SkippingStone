function build_main_window(environment, model, constants, calculation, settings)

    %% Initialize
    
    % initialize globals
    global MainWin current_tab current_output_tab
    global launch_tab sequence_tab arrival_tab algorithms_tab output_tab
    global Pareto_tab trajectory_tab central_body_speed post_processing 
    global BATCH_optimization optimization_statistics 
    
    % Start building main window 
    scz = get(0, 'ScreenSize');                    % put the window in the center of the screen
    scx = round(scz(3)/2-800/2);                   % (this will usually work fine, except on some  
    scy = round(scz(4)/2-600/2);                   % multi-monitor setups)     
    figure(MainWin);
    set(MainWin,...                                
        'visible' , 'off',...                      % hide the GUI while it is being constructed
        %{
        'backingstore', 'off',...                  % DON'T save a copy in the background
        %}
        'position', [scx scy 935 690], ...         % 935 Ã— 690 will look right on most computers        
        'resize'  , 'on', ...                      % but just keep it resizable 
        'renderer', 'zbuffer', ...                 % best choice for speed vs. compatibility
        'units'   , 'normalized',...               % better for resizing etc.        
        'DockControls', 'off',...                  % force it to be non-dockable
        'menubar' ,'none', ...                     % menubar is redefined later
        'toolbar' ,'none', ...                     % no toolbar (???possible extention)
        'NumberTitle', 'off',...                   % "Figure 123456789:" just looks corny
        'color'   , environment.colors.window_bgcolor,...  % use system-default colorscheme
        'UserData', 'clean',...                    % nothing's done; state is 'clean'
        'defaultuicontrolfontsize', 8,...          % force small fonts
        'CloseRequestFcn', @close_main_window);    % function called when window is closed
   
    %% Menu bar
   
    % file menu    
    file_menu = uimenu('Label', '&File');
        % load settings
        uimenu(file_menu, ...
            'Label'   , 'Load &settings...', ...  
            'Callback', @(varargin) callbacks('load_settings', varargin{:}));
        
        % save settings
        uimenu(file_menu, ...
            'Label'   ,'Save s&ettings...',...
            'Callback', @(varargin) callbacks('save_settings', varargin{:}));
        
        %-------------------------------------
        % load default settings
        uimenu(file_menu, ...
            'Separator', 'on',...
            'Label'   ,'Load default settings',...
            'Callback', @(varargin) callbacks('load_defaults', varargin{:}));        
        %-------------------------------------        
        % load results        
        uimenu(file_menu,...
            'Label'    ,'&Load results...', ...
            'Callback' , @(varargin) callbacks('load_results', varargin{:}), ...
            'Separator', 'on');            
        % save results
        uimenu(file_menu,...
            'Label'   , '&Save results...', ...
            'Callback', @(varargin) callbacks('save_results', varargin{:}));
        %-------------------------------------
        % export        
        export = uimenu(file_menu,...
            'Label'    ,'&Export results...',...
            'Separator', 'on'); 
            uimenu(export,...
                'label'   , 'STK scenario...',...
                'Callback', @(varargin)callbacks('export_results','STK',varargin{:}));
            uimenu(export,...
                'label'   , 'Text file (TAB)...',...
                'Callback', @(varargin)callbacks('export_results','TAB',varargin{:}));
            uimenu(export,...
                'label'   , 'Text file (CSV)...',...
                'Callback', @(varargin)callbacks('export_results','CSV',varargin{:}));
        % import
        import = uimenu(file_menu,...
            'Label'    ,'&Import results...'); 
            uimenu(import,...
                'label'   , 'STK scenario...',...
                'Callback', @(varargin)callbacks('import_results','STK',varargin{:}));
            uimenu(import,...
                'label'   , 'Text file (TAB)...',...
                'Callback', @(varargin)callbacks('import_results','TAB',varargin{:}));
            uimenu(import,...
                'label'   , 'Text file (CSV)...',...
                'Callback', @(varargin)callbacks('import_results','CSV',varargin{:}));
        %-------------------------------------
        % exit
        uimenu(file_menu,...
            'Label'    ,'E&xit...',...
            'Separator', 'on',...
            'callback' , @close_main_window); 

    % appearance menu
    appearance_menu = uimenu('Label', '&Appearance');
    % program 
        uimenu(appearance_menu, ...
            'Label'   , [environment.program_name, '...'], ...  
            'Callback', @not_yet_done);
        % plot settings
        uimenu(appearance_menu, ...
            'Label'   , 'Plots...', ...  
            'Callback', @not_yet_done);
        % defaults 
        uimenu(appearance_menu, ...
            'Label'   , 'Defaults...', ...  
            'Callback', @not_yet_done);
        
    % help menu    
    help_menu = uimenu('Label', '&Help');
        uimenu(help_menu,...
            'Label'   , '&Quick Reference',...
            'Callback', @not_yet_done);
        uimenu(help_menu,...
            'Label'   , '&Documentation',...
            'Callback', @not_yet_done);
        uimenu(help_menu, ...
            'Label'    , '&About',...
            'Separator', 'on',...
            'Callback' , @(varargin) callbacks('about', varargin{:}));
   
    %% Tab buttons
    
    % Launch & Satellite data  
    handles.tabbutton(launch_tab) = uicontrol(...
        'parent'  , MainWin,...
        'style'   , 'togglebutton',...
        'units'   , 'normalized',...
        'fontweight', 'bold',...
        'string'  , '<html>Launch &<br> Satellite data</html>',...
        'selectionhighlight', 'off',...
        'value'   , 1,...
        'position', [.01, .92, .15, .06],...        
        'callback', @(varargin) callbacks('showtab', launch_tab, varargin{:}));
    
    % Sequence
    handles.tabbutton(sequence_tab) = uicontrol(...
        'parent'  , MainWin,...
        'style'   , 'togglebutton',...
        'units'   , 'normalized',...
        'string'  , 'Sequence',...        
        'selectionhighlight', 'off',...
        'position', [.16, .92, .15, .06],...        
        'callback', @(varargin) callbacks('showtab', sequence_tab, varargin{:}));
    
    % Arrival Data & post-processing
    handles.tabbutton(arrival_tab) = uicontrol(...
        'parent'  , MainWin,...
        'style'   , 'togglebutton',...
        'units'   , 'normalized',...
        'string'  , '<html>Arrival Data &<br> post-processing</html>',...
        'selectionhighlight', 'off',...
        'position', [.31, .92, .15, .06],...        
        'callback', @(varargin) callbacks('showtab', arrival_tab, varargin{:}));
    
    % Algorithms
    handles.tabbutton(algorithms_tab) = uicontrol(...
        'parent'  , MainWin,...
        'style'   , 'togglebutton',...
        'units'   , 'normalized',...
        'string'  , 'Algorithms',...        
        'selectionhighlight', 'off',...
        'position', [.46, .92, .15, .06],...        
        'callback', @(varargin) callbacks('showtab', algorithms_tab, varargin{:}));
    
    % Output
    handles.tabbutton(output_tab) = uicontrol(...
        'parent'  , MainWin,...
        'style'   , 'togglebutton',...
        'units'   , 'normalized',...
        'string'  , 'Output',...     
        'enable'  , 'off',...
        'selectionhighlight', 'off',...
        'position', [.61, .92, .15, .06],...        
        'callback', @(varargin) callbacks('showtab', output_tab, varargin{:}));
    
    %% Launch & satellite data tab
    
    % main panel
    handles.tab(launch_tab).panel = uipanel(...
        'position'  , [.01 .12 .985 .8],...  
        'visible', 'on');
        
        %% initial state button        
        uicontrol(...
            'units'   , 'normalized',...
            'parent'  , handles.tab(launch_tab).panel,...
            'style'   , 'pushbutton',...
            'position', [.52, .89, .47, .07],...
            'string'  , 'Load initial state...',...
            'callback', @not_yet_done)
    
        %% launcher panel
        
        launcher_panel = uipanel(...
            'parent'  , handles.tab(launch_tab).panel,...
            'position', [.01, .50, .5, .48],...
            'title'   , 'Launch'            );
        
            % launcher selection
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     , 'text',...
                'string'    , 'Available launchers',...                
                'position'  , [.02 .88 .95 .1]);
            handles.tab(launch_tab).Launcher = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     , 'popup',...
                'string'    , {'none'},...
                'Background', environment.colors.edit_bgcolor,...
                'position'  , [.02 .8 .95 .1]);  
            % launch mass
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'Launch mass:',...
                'position'  ,[.01, .6 .19 .1]);
            handles.tab(launch_tab).LaunchMass = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     , 'edit',...
                'Background', environment.colors.edit_bgcolor,...
                'position'  , [.3, .62 .15 .1], ...
                'callback'  , @(varargin) modify_settings('change_single_setting',...
                              'launch.launch_mass', [], varargin{:}));
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'kg',...
                'position'  ,[.45, .60 .05 .1]);
            % Launch mass margin
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'Launch mass margin:',...
                'position'  ,[.01, .41 .28 .1])
            handles.tab(launch_tab).LaunchMassMargin = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     , 'edit',...
                'Background', environment.colors.edit_bgcolor,...
                'position'  , [.3, .43 .15 .1],...
                'callback'  , @(varargin)...
                              modify_settings('change_single_setting', 'launch.launch_mass_margin', [], varargin{:}));
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'%',...
                'position'  ,[.45, .41 .05 .1])
            % Adapter mass 
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'Adapter mass:',...
                'position'  ,[.01, .22 .19 .1])
            handles.tab(launch_tab).AdapterMass = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     , 'edit',...
                'Background', environment.colors.edit_bgcolor,...
                'position'  , [.3, .24 .15 .1],...
                'callback'  , @(varargin) modify_settings('change_single_setting', ...
                                'launch.adapter_mass', [], varargin{:}));
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'kg',...
                'position'  ,[.45, .22 .05 .1]);
            % Max. C3 at launch
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'Max. C3 at launch:',...
                'position'  ,[.01, .03 .24 .1])
            handles.tab(launch_tab).MaxC3Launch = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     , 'edit',...
                'Background', environment.colors.edit_bgcolor,...
                'position'  , [.3, .05 .15 .1],...
                'callback'  , @(varargin) modify_settings('change_single_setting', ...
                                'launch.max_C3', [], varargin{:}));
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'style'     ,'text',...
                'string'    ,'km2/s2',...
                'position'  ,[.45, .03 .1 .1])
            % dry mass
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'HorizontalAlignment','left',...
                'Position'  , [.55, .6 .15 .12],...
                'String'    , 'payload mass:',...
                'Style'     , 'text');
            handles.tab(launch_tab).MinPayloadMass = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'Background', environment.colors.edit_bgcolor,...
                'Position'  , [.74, .62 .19 .1],...
                'Style'     , 'edit',...
                'callback'  , @(varargin) modify_settings('change_single_setting', ...
                                    'launch.payload_mass', [], varargin{:}));
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'HorizontalAlignment','left',...
                'Position'  , [.94, .58 .05 .12],...
                'String'    , 'kg',...
                'Style'     , 'text');
            % payload mass margin
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'HorizontalAlignment','left',...
                'Position'  , [.55, .28 .15 .24],...
                'String'    , 'payload mass margin:',...
                'Style'     , 'text');
            handles.tab(launch_tab).MinPayloadMassMargin = uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'Background', environment.colors.edit_bgcolor,...
                'Position'  , [.74, .42 .19 .1],...
                'Style'     , 'edit',...
                'callback'  , @(varargin) modify_settings('change_single_setting', ...
                                    'launch.payload_mass_margin', [], varargin{:}));
            uicontrol(...
                'units'     , 'normalized',...
                'parent'    , launcher_panel,...            
                'HorizontalAlignment','left',...
                'Position'  , [.94, .37 .05 .12],...
                'String'    , '%',...
                'Style'     , 'text');
                   
        %% power supply
        
        uipanel(...
            'parent'  , handles.tab(launch_tab).panel,...
            'position', [.01, .01, .5, .46],...
            'title'   , 'Satellite structure data');
        
        % power supply
        power_panel = uipanel(...
            'Parent'  , handles.tab(launch_tab).panel,...
            'Title'   , 'Power supply (relevant for low-thrust optimization)',...
            'Position',[.01, .01, .5, .46]);
            % power type
            power_group = uibuttongroup(...
                'Parent'    , power_panel,...
                'Units'   , 'normalized',...
                'BorderType', 'none',...
                'Position'  , [.01 .8 .98 .2 ],...
                'SelectionChangeFcn', @(varargin){...
                    modify_settings('change_single_setting', 'power.selected', ...
                    'handles.tab(launch_tab).power_radio', varargin{:});
                    callbacks('change_power_supply', varargin{:})});            
                % SEP
                handles.tab(launch_tab).power_radio(1) = uicontrol(...
                    'Parent'  , power_group,...
                    'Units'   , 'normalized',...
                    'Position',[0.00515463917525773 0.225 0.435567010309278 0.575],...
                    'String'  , 'Solar panels (SEP)',...
                    'Style'   , 'radiobutton');
                % NEP
                handles.tab(launch_tab).power_radio(2) = uicontrol(...
                    'Parent'  , power_group,...
                    'Units'   , 'normalized',...
                    'Position', [0.538659793814433 0.225 0.25 0.575],...
                    'String'  , 'Nuclear (NEP)',...
                    'Style'   , 'radiobutton');

            % SEP options

            % power at 1 AU        
            handles.tab(launch_tab).SEP(1) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'HorizontalAlignment','left',...
                'Position'  , [0.0214797136038186 0.726850393700789 0.196610978520286 0.0551181102362205],...
                'String'    , 'Power at 1 AU:',...
                'Style'     , 'text' );
            handles.tab(launch_tab).SEP(2) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Background', environment.colors.edit_bgcolor,...
                'Position'  , [0.225250596658711 0.706850393700789 0.20673031026253 0.088740157480315],...
                'Style'     , 'edit',...
                'callback'  , @(varargin)...
                              modify_settings('change_single_setting', 'power.SEP.power_1AU', [], varargin{:}));
            handles.tab(launch_tab).SEP(3) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'HorizontalAlignment','left',...
                'Position'  , [0.443914081145585 0.726850393700789 0.124105011933174 0.0551181102362205],...
                'String'    , 'W',...
                'Style'     , 'text');

            % Deterioration rate
            handles.tab(launch_tab).SEP(4) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'HorizontalAlignment','left',...
                'Position'  , [0.0214797136038186 0.569055118110237 0.171837708830549 0.120236220472441],...
                'String'    , 'Deterioration rate:',...
                'tooltip'   , ['<html>Maximum power output at any given time is computed as <br>',...
                               'P(t) = P0 * rate^t, with [t] in years</html>'],...
                'Style'     , 'text');
            handles.tab(launch_tab).SEP(5) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Background', environment.colors.edit_bgcolor,...
                'Position'  , [0.225250596658711 0.582677165354332 0.20673031026253 0.088740157480315],...                
                'tooltip'   , ['<html>Maximum power output at any given time is computed as <br>',...
                               'P(t) = P0 * rate^t, with [t] in years</html>'],...
                'Style'     , 'edit',...
                'callback'  , @(varargin)...
                              modify_settings('change_single_setting', 'settings.power.SEP.deterioration_rate', [], varargin{:}));
            handles.tab(launch_tab).SEP(6) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'HorizontalAlignment','left',...
                'Position'  , [0.443914081145585 0.598425196850395 0.124105011933174 0.0551181102362205],...
                'String'    , '[-]',...
                'tooltip'   , ['<html>Maximum power output at any given time is computed as <br>',...
                               'P(t) = P0 * rate^t, with [t] in years</html>'],...
                'Style'     , 'text');

            % Jettison panels
            handles.tab(launch_tab).SEP(7) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Position'  , [0.0214797136038186 0.41732283464567 0.525059665871122 0.0905511811023622],...
                'String'    , 'Panels can be jetisonned',...
                'Style'     , 'checkbox',...
                'Callback'  , @(varargin){...
                     modify_settings('change_single_setting', 'power.SEP.jettisonable', [], varargin{:}),...
                     callbacks('enable_jettison', varargin{:})});
                % mass of Solar panels
                handles.tab(launch_tab).Jettison(1) = uicontrol(...
                    'Parent'    , power_panel,...
                    'Units'     , 'normalized',...
                    'Background', environment.colors.edit_bgcolor,...
                    'Enable'    , 'off',...
                    'Position'  , [0.205250596658711 0.295275590551182 0.20673031026253 0.088740157480315],...
                    'Style'     , 'edit', ...
                    'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'power.SEP.panel_mass', [], varargin{:}));
                handles.tab(launch_tab).Jettison(2) = uicontrol(...
                    'Parent'    , power_panel,...
                    'Units'     , 'normalized',...
                    'Enable'    , 'off',...
                    'HorizontalAlignment','left',...
                    'Position'  , [0.448687350835322 0.314960629921261 0.0668257756563246 0.0590551181102362],...
                    'String'    , 'kg',...
                    'Style'     , 'text');
                handles.tab(launch_tab).Jettison(3) = uicontrol(...
                    'Parent'    , power_panel,...
                    'Units'     , 'normalized',...
                    'Enable'    , 'off',...
                    'HorizontalAlignment','left',...
                    'Position'  , [0.0214797136038186 0.248031496062994 0.156491646778043 0.137795275590551],...
                    'String'    , 'Total mass of panels:',...
                    'Style'     , 'text');

            % NEP options

            % Amount of nuclear batteries
            handles.tab(launch_tab).NEP(1) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Enable'    , 'off',...
                'HorizontalAlignment','left',...
                'Position'  , [0.529832935560859 0.661417322834647 0.126491646778043 0.0905511811023622],...
                'String'    , 'Use',...
                'Style'     , 'text');
            handles.tab(launch_tab).NEP(2) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Background', environment.colors.edit_bgcolor,...
                'Enable'    , 'off',...
                'Position'  , [0.687350835322196 0.688976377952757 0.22673031026253 0.088740157480315],...
                'String'    , 1,...
                'Style'     , 'edit',...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'power.NEP.amount', [], varargin{:}));

            % type of RTG/SRG
            handles.tab(launch_tab).NEP(3) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Enable'    , 'off',...
                'HorizontalAlignment','left',...
                'Position'  , [0.529832935560859 0.442755905511812 0.155131264916468 0.177165354330709],...
                'String'    , 'nuclear batteries:',...
                'Style'     , 'text');        
            handles.tab(launch_tab).NEP(4) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Background', environment.colors.edit_bgcolor,...
                'Enable'    , 'off',...
                'Position'  , [0.687350835322196 0.507874015748033 0.229116945107399 0.0866141732283465],...
                'String'    , {'Custom';'MMRTG';'SRG'},...
                'Style'     , 'popupmenu');

            % Each produces so many watts
            handles.tab(launch_tab).NEP(5) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Background', environment.colors.edit_bgcolor,...
                'Enable'    , 'off',...
                'Position'  , [0.687350835322196 0.295275590551182 0.22673031026253 0.088740157480315],...                
                'Style'     , 'edit',...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'power.NEP.power_per_battery', [], varargin{:}));
            handles.tab(launch_tab).NEP(6) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Enable'    , 'off',...
                'HorizontalAlignment','left',...
                'Position'  , [0.933174224343675 0.295275590551182 0.0429594272076372 0.0590551181102362],...
                'String'    , 'W',...
                'Style'     , 'text');
            handles.tab(launch_tab).NEP(7) = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Enable'    , 'off',...
                'HorizontalAlignment','left',...
                'Position'  , [0.529832935560859 0.271653543307088 0.126491646778043 0.126299212598425],...
                'String'    , 'Each producing',...
                'Style'     , 'text');

            % Keep this many watts available to the instruments 
            uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Position'  , [0.114558472553699 0.094488188976378 0.124105011933174 0.0551181102362205],...
                'String'    , 'At least',...
                'Style','text');
            handles.tab(launch_tab).MinInstrumentPower = uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'Background', environment.colors.edit_bgcolor,...
                'Position'  , [0.248210023866348 0.0866141732283465 0.336515513126492 0.088740157480315],...                
                'Style'     , 'edit',...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'power.instrument_power', [], varargin{:}));
            uicontrol(...
                'Parent'    , power_panel,...
                'Units'     , 'normalized',...
                'HorizontalAlignment','left',...
                'Position'  , [0.596658711217184 0.047244094488189 0.343675417661098 0.133858267716535],...
                'String'    , 'W should be available to the instruments at all time',...
                'Style'     , 'text');
            
        %% Thrust & engine panel    
        
        TE_panel = uipanel(...
            'parent'  , handles.tab(launch_tab).panel,...
            'position', [.52, .01, .47, .85],...
            'title'   , 'Thrust & Engine Data');
        
            % low/high thrust
            hilo = uibuttongroup(...
                'parent'    , TE_panel,...
                'position'  , [0 .7 1 .3],...
                'Bordertype','none',...
                'SelectionChangeFcn', @(varargin){...
                    modify_settings('change_single_setting', ...
                        'propulsion.selected', 'handles.tab(launch_tab).propulsion', varargin{:});
                    callbacks('engine', varargin{:})}); 
                handles.tab(launch_tab).propulsion(1) = uicontrol(...
                    'units'   , 'normalized',...
                    'style'   , 'radio',...                     
                    'parent'  , hilo,...
                    'position', [.05 .7 .8 .15],...
                    'string'  , 'High-thrust (chemical thrusters)');
                handles.tab(launch_tab).propulsion(2) = uicontrol(...
                    'units'   , 'normalized',...
                    'style'   , 'radio',... 
                    'parent'  , hilo,...                    
                    'position', [.05 .5 .8 .15],...
                    'string'  , 'Low-thrust (ion engine)');
                handles.tab(launch_tab).propulsion(3) = uicontrol(...
                    'units'   , 'normalized',...
                    'style'   , 'radio',...                     
                    'parent'  , hilo,...
                    'position', [.05 .3 .8 .15],...
                    'string'  , 'Low-thrust (Solar sail)');
                
              % Isp 
              handles.tab(launch_tab).High(1) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   , 'text',...                  
                  'string'  , 'Isp during cruise:',...
                  'position', [.05 .65 .25 .06],...
                  'HorizontalAlignment','left');
              handles.tab(launch_tab).High(2) = uicontrol(...
                  'units'     , 'normalized',...
                  'style'     , 'edit',...
                  'parent'    , TE_panel,...
                  'Background', environment.colors.edit_bgcolor,...
                  'position'  , [.38 .665 .5 .06],...
                  'callback'  , @(varargin) modify_settings('change_single_setting', ...
                                    'propulsion.high_thrust.Isp', [], varargin{:}));
              handles.tab(launch_tab).High(3) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 's',...
                  'position', [.88 .65 .05 .06]);
              
              % Max. thrust level 
              handles.tab(launch_tab).Ion(1) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 'Max. thrust level (per engine):',...
                  'position', [.05 .50 .25 .12],...                  
                  'enable'  , 'off',...
                  'HorizontalAlignment','left');
              handles.tab(launch_tab).Ion(2) = uicontrol(...
                  'units'     , 'normalized',...
                  'style'     , 'edit',...
                  'parent'    , TE_panel,...
                  'Background', environment.colors.edit_bgcolor,...                  
                  'position'  , [.38 .565 .5 .06],...
                  'enable'    , 'off',...
                  'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'propulsion.ion_engine.maxT', [], varargin{:}));
              handles.tab(launch_tab).Ion(3) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 'N',...                  
                  'position', [.88 .55 .05 .06],...
                  'enable'  , 'off');
              
              % Number of engines
              handles.tab(launch_tab).Ion(4) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 'Number of engines:',...
                  'position', [.05 .45 .30 .06],...                  
                  'enable'  , 'off',...
                  'HorizontalAlignment','left');
              handles.tab(launch_tab).Ion(5) = uicontrol(...
                  'units'     , 'normalized',...
                  'style'     , 'edit',...
                  'parent'    , TE_panel,...
                  'Background', environment.colors.edit_bgcolor,...
                  'position'  , [.38 .465 .5 .06],...                  
                  'enable'    , 'off',...
                  'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'propulsion.ion_engine.amount', [], varargin{:}));
              handles.tab(launch_tab).Ion(6) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , '[-]',...                  
                  'position', [.88 .45 .05 .06],...
                  'enable'  , 'off');
              
              % min. power level per engine
              handles.tab(launch_tab).Ion(7) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   , 'text',...
                  'string'  , 'Min. power level (per engine):',...
                  'position', [.05 .35 .32 .08],...                  
                  'enable'  , 'off',...
                  'HorizontalAlignment','left');
              handles.tab(launch_tab).Ion(8) = uicontrol(...
                  'units'     , 'normalized',...
                  'style'     , 'edit',...
                  'parent'    , TE_panel,...
                  'Background', environment.colors.edit_bgcolor,...                  
                  'position'  , [.38 .365 .5 .06],...
                  'enable'    , 'off',...
                  'callback'  , @(varargin) modify_settings('change_single_setting',...
                                    'propulsion.ion_engine.min_power', [], varargin{:}));
              handles.tab(launch_tab).Ion(9) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   , 'text',...
                  'string'  , 'W',...                  
                  'position', [.88 .35 .05 .06],...
                  'enable'  , 'off');
              
              % Sail surface area
              handles.tab(launch_tab).Sail(1) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 'Sail surface area:',...                  
                  'position', [.05 .25 .32 .06],...
                  'enable'  , 'off',...
                  'HorizontalAlignment','left');
              handles.tab(launch_tab).Sail(2) = uicontrol(...
                  'units'     , 'normalized',...
                  'style'     , 'edit',...
                  'parent'    , TE_panel,...                  
                  'Background', environment.colors.edit_bgcolor,...
                  'position'  , [.38 .265 .5 .06],...
                  'enable'    , 'off',...
                  'callback'  , @(varargin) modify_settings('change_single_setting', ...
                                    'propulsion.Solar_sail.surface_area', [], varargin{:}));
              handles.tab(launch_tab).Sail(3) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 'm2',...                  
                  'position', [.88 .25 .05 .06],...
                  'enable'  , 'off');
              
              % Different Isp at capture
              handles.tab(launch_tab).Isp(1) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   , 'checkbox',...                  
                  'position', [.05 .15 .5 .06],...
                  'string'  , 'Use different Isp for capture',...
                  'callback', @(varargin){modify_settings('change_single_setting', ...
                                'propulsion.different_Isp.check', [], varargin{:}),...
                                callbacks('captureIsp', varargin{:})});                    
              handles.tab(launch_tab).Isp(2) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   , 'text',...
                  'string'  , 'Isp at capture:',...                  
                  'position', [.05 .05 .32 .06],...
                  'enable'  , 'off',...
                  'HorizontalAlignment','left');
              handles.tab(launch_tab).Isp(3) = uicontrol(...
                  'units'     , 'normalized',...
                  'style'     , 'edit',...
                  'parent'    , TE_panel,...                  
                  'Background', environment.colors.edit_bgcolor,...
                  'position'  , [.38 .065 .5 .06],...
                  'enable'    , 'off',...
                  'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'propulsion.different_Isp.Isp', [], varargin{:}));
              handles.tab(launch_tab).Isp(4) = uicontrol(...
                  'units'   , 'normalized',...
                  'parent'  , TE_panel,...
                  'style'   ,'text',...
                  'string'  , 's',...                  
                  'position', [.88 .05 .05 .06],...
                  'enable'  , 'off');
              
    %% Sequence tab
    
    % main panel
    handles.tab(sequence_tab).panel = uipanel(...        
        'position'  , [.01 .12 .985 .8],...                
        'visible'   , 'off');
    
        %% model panel
        
        mdl_panel = uipanel(...
            'parent'   , handles.tab(sequence_tab).panel,...
            'title'    , 'Model',...        
            'position' , [.01 .01 .40 .20]);
        
            % model selection
            mdl_group = uibuttongroup(...
                'parent'   , mdl_panel,...
                'position' , [0 0 1 1],...
                'bordertype', 'none',...
                'SelectionChangeFcn', @(varargin){...
                    modify_settings('change_single_setting', 'model(1:3)', ...
                    'handles.tab(sequence_tab).selected_model(1:3)', varargin{:});
                    callbacks('model_selection', varargin{:})}); 
                % Solar system (default)
                handles.tab(sequence_tab).selected_model(1) = uicontrol(...
                    'parent'  , mdl_group,...
                    'style'   , 'radio',...
                    'units'   , 'normalized',...
                    'position', [.05 .7 .4 .2],...
                    'string'  , 'Solar system');
                % Jovian system 
                handles.tab(sequence_tab).selected_model(2) = uicontrol(...
                    'parent'  , mdl_group,...
                    'style'   , 'radio',...
                    'units'   , 'normalized',...
                    'position', [.05 .4 .4 .2],...
                    'string'  , 'Jovian system');            
                % Julian system 
                handles.tab(sequence_tab).selected_model(3) = uicontrol(...
                    'parent'  , mdl_group,...
                    'style'   , 'radio',...
                    'units'   , 'normalized',...
                    'position', [.05 .1 .4 .2],...
                    'string'  , 'Julian system');
            
            % MPCORB
            handles.tab(sequence_tab).selected_model(4) = uicontrol(...
                'parent'  , mdl_panel,...
                'units'   , 'normalized',...
                'style'   , 'check',...
                'string'  , 'Minor Planets (MPCORB)',...
                'tooltip' , 'Tick this box if you want to include Minor Planets in your cost-functions',...                
                'position', [.40 .75 .50 .15],...
                'callback', @(varargin){...
                        modify_settings('change_single_setting', 'model(4)', [], varargin{:});
                        callbacks('MPs_check', false, varargin{:})});
            handles.tab(sequence_tab).UpdateMPButton = uicontrol(...
                'parent'  , mdl_panel,...
                'units'   , 'normalized',...
                'style'   , 'pushbutton',...
                'string'  , 'Update database...',...
                'enable'  , 'off',...
                'position', [.40 .50 .50 .20],...
                'callback', @(varargin) callbacks('update_minor_planets_data', true, varargin{:}));
            
            % USER database
            handles.tab(sequence_tab).selected_model(5) = uicontrol(...
                'parent'  , mdl_panel,...
                'units'   , 'normalized',...
                'style'   , 'check',...
                'string'  , 'User Defined Database',...
                'position', [.40 .25 .50 .15],...
                'callback', @(varargin){... 
                        modify_settings('change_single_setting', 'model(5)', ...
                        [], varargin{:});
                callbacks('USR_DB_check', varargin{:})});
            handles.tab(sequence_tab).LoadUserDBButton = uicontrol(...
                'parent'  , mdl_panel,...
                'units'   , 'normalized',...
                'style'   , 'pushbutton',...
                'string'  , 'Load...',...
                'enable'  , 'off',...
                'position', [.40 .01 .50 .20],...
                'callback', @(varargin) callbacks('usr_db_parameters', varargin{:}));
                
        %% constraints panel
        
        constr_panel = uipanel(...
            'units'    , 'normalized',...
            'parent'   , handles.tab(sequence_tab).panel,...
            'title'    , 'Swing-by constraints',...        
            'position' , [.59 .01 .40 .20]);  
        
            constr_defaults = {'parent'  , constr_panel,...
                               'units'   , 'normalized' ...
                              };
        
            % min dist to Central body
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [.01 .48 .20 .41],...
                'string'  , ['Min. distance to ', model.CentralBody{1}, ':'])
            handles.tab(sequence_tab).MinDistToSun = uicontrol(...
                constr_defaults{:},...
                'style'   , 'edit',...
                'position', [.24 .6 .15 .25],...
                'background', environment.colors.edit_bgcolor,...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', ...
                        'GAM.constraints.min_Solar_distance', [], varargin{:}));
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [.40 .55 .08 .25],...
                'string'  , 'AU')            
            
            % max. total Delta-V
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [.01 .02 .20 .41],...
                'string'  , 'Max. total Delta-V:')
            handles.tab(sequence_tab).MaxTotalDeltaV = uicontrol(...
                constr_defaults{:},...
                'style'   , 'edit',...
                'position', [.24 .18 .15 .25],...
                'background', environment.colors.edit_bgcolor,...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', ...
                        'GAM.constraints.max_DV', [], varargin{:});
                callbacks('max_total_DV_check', 'warn_user', varargin{:})});
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [.40 .13 .08 .25],...
                'string'  , 'km/s')
            
            % C3 / L/D tolerance
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'position', [.52 .42 .22 .41],...
                'horizontalalignment', 'left',...
                'string'  , 'C3 or L/D tolerance:')                
            handles.tab(sequence_tab).C3LoverDTolerance = uicontrol(...
                constr_defaults{:},...
                'style'   , 'edit',...  
                'position', [.75 .6 .15 .25],...
                'background', environment.colors.edit_bgcolor,...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'GAM.constraints.C3LoverD_tolerance', [], varargin{:}));
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [.92 .6 .05 .21],...
                'string'  , '%');
            
            % max. total time of flight
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position',  [.52 .02 .22 .41],...
                'string'  , 'Max. total time of flight:')
            handles.tab(sequence_tab).MaxTotalTOF = uicontrol(...
                constr_defaults{:},...
                'style'   , 'edit',...                
                'position', [.75 .18 .15 .25],...
                'background', environment.colors.edit_bgcolor,...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'GAM.constraints.max_tof', [], varargin{:}));            
            uicontrol(...
                constr_defaults{:},...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [.91 .13 .08 .21],...
                'string'  , 'days');
        
        %% Departure body panel
              
        % string containing all swingby bodies
        bodystrings = ['(none)'; model.names];   
        
        % string containing all the months
        monthstrings = {'Jan' 'Feb' 'Mar' 'Apr' 'May' 'Jun' 'Jul' 'Aug' 'Sep' 'Oct' 'Nov' 'Dec'};
        
        departure_panel = uipanel(...
            'parent'    , handles.tab(sequence_tab).panel,...
            'units'     , 'normalized',...
            'title'     , 'Departure',...
            'position'  , [.01 .22 .2 .76]);
        
            % static texts
            uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'text',...
                'units'     , 'normalized',...
                'string'    , 'Body:',...
                'horizontalalignment', 'left',...
                'position'  , [.01 .90 .2 .04]);
            uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'text',...
                'units'     , 'normalized',...
                'string'    , 'Launch window start:',...
                'horizontalalignment', 'left',...
                'position'  , [.01 .73 .35 .12]);
            uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'text',...
                'units'     , 'normalized',...                
                'string'    , 'Launch window end:',...
                'horizontalalignment', 'left',...
                'position'  , [.01 .53 .35 .12]);            
            
            % departure body 
            handles.tab(sequence_tab).DepartureBody = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...                
                'string'    , bodystrings([false; model.departureable]),...
                'position'  , [.35 .91 .6 .04],...
                'callback'  , @(varargin)...
                        modify_settings('change_single_setting', 'departure.body', [], varargin{:}));
                    
            % launch window start
            handles.tab(sequence_tab).launch_window.year(1) = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , 1950:2050,...
                'position'  , [.35 .81 .6 .04],...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', 'departure.launch_window.year(1)', [], varargin{:});
                        callbacks('check_dates', varargin{:})});
            handles.tab(sequence_tab).launch_window.month(1) = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , monthstrings,...
                'position'  , [.35 .75 .35 .04],...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', 'departure.launch_window.month(1)', [], varargin{:});
                        callbacks('check_dates', varargin{:})});
            handles.tab(sequence_tab).launch_window.day(1) = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , 1:31,...
                'position'  , [.70 .75 .25 .04],...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', 'departure.launch_window.day(1)', [], varargin{:});
                        callbacks('check_dates', varargin{:})});
                    
            % launch window end
            handles.tab(sequence_tab).launch_window.year(2) = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , 1950:2050,...
                'position'  , [.35 .61 .6 .04],...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', 'departure.launch_window.year(2)', [], varargin{:});
                        callbacks('check_dates', varargin{:})});
            handles.tab(sequence_tab).launch_window.month(2) = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , monthstrings,...
                'position'  , [.35 .55 .35 .04],...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', 'departure.launch_window.month(2)', [], varargin{:});
                        callbacks('check_dates', varargin{:})});
            handles.tab(sequence_tab).launch_window.day(2) = uicontrol(...
                'parent'    , departure_panel,...
                'style'     , 'popup',...
                'units'     , 'normalized',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , 1:31,...
                'position'  , [.70 .55 .25 .04],...
                'callback'  , @(varargin){...
                        modify_settings('change_single_setting', 'departure.launch_window.day(2)', [], varargin{:});
                        callbacks('check_dates', varargin{:})});
            
        %% Swingby-panel

        handles.tab(sequence_tab).swingby_panel = uipanel(...
            'parent'    , handles.tab(sequence_tab).panel,...
            'units'     , 'normalized',...
            'title'     , 'Swingbys',...
            'position'  , [.22 .22 .6 .76]);
        
        swingby_panel = handles.tab(sequence_tab).swingby_panel;        
        
            % descriptions            
            swingbypanel_text_defaults = {'parent', swingby_panel,...
                                      'style' , 'text',...                                      
                                      'units' , 'normalized',...
                                      'horizontalalignment', 'left'};
            
            uicontrol(... 
                swingbypanel_text_defaults{:},...                
                'position', [.01 .85 .18 .1],...                
                'string'  , 'Swingby body:')                    
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .80 .18 .1],...                
                'string'  , 'lower limit on flight-time:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .71 .18 .1],...                
                'string'  , 'upper limit on flight-time:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .65 .18 .05],...                
                'string'  , 'minimum altitude:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .56 .18 .05],...                
                'string'  , 'short / longway:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .47 .18 .05],...                
                'string'  , 'max. Delta-V:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .36 .18 .10],...                
                'string'  , 'Deep-space manoeuvres:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .26 .18 .1],...                
                'string'  , 'complete revolutions:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .20 .18 .05],...               
                'string'  , 'L/D value:')                
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .06 .18 .1],...                
                'string'  , 'Type of Swingby:')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.01 .00 .18 .1],...                
                'string'  , 'Jettison solar panels:')
            
            % units
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .85 .05 .1],...                
                'string'  , '[-]')    
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .78 .07 .1],...                
                'string'  , 'days')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .69 .07 .1],...
                'string'  , 'days')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .65 .05 .05],...                
                'string'  , 'km')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .56 .05 .05],...                
                'string'  , '[-]')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .47 .05 .05],...                
                'string'  , 'km/s')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .34 .05 .10],...                
                'string'  , '[-]')
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .26 .05 .1],...                
                'string'  , 'int')
             uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .20 .05 .05],...                
                'string'  , '[-]')                
            uicontrol(...
                swingbypanel_text_defaults{:},...                
                'position', [.91 .06 .05 .1],...                
                'string'  , '[-]');

            % repeated uicontrols
            
            handles.tab(sequence_tab).GAM_jettison_group = uibuttongroup(...
                'parent'    , swingby_panel,...
                'units'     , 'normalized',...
                'position'  , [.2 .0 .70 .1],...
                'BorderType', 'none' ...
                );
            
            for i = 1:4

                x = 0.02 + i*0.18;

                % draw all the repeated controls
                handles.tab(sequence_tab).GAM.number(i) = uicontrol(...
                    swingbypanel_text_defaults{:},...
                    'position', [x .90 .15 .1],...                    
                    'string'  , ['Swingby ', num2str(i)]);                    
                handles.tab(sequence_tab).GAM.body(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .90 .16 .06],...
                    'style'     , 'popup',...
                    'background', environment.colors.edit_bgcolor,...
                    'string'    , bodystrings([true; model.GAMable]),...
                    'callback'  , @(varargin){...
                            modify_settings('change_single_setting', ['GAM.body(', num2str(i),')'], [], varargin{:});
                            callbacks('switch_bodies', i, varargin{:})});                    
                handles.tab(sequence_tab).GAM.TOF_LB(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .83 .16 .06],...
                    'style'     , 'edit',...
                    'background', environment.colors.edit_bgcolor,...
                    'callback'  , @(varargin)callbacks('change_TOF', i, varargin{:}));                        
                handles.tab(sequence_tab).GAM.TOF_UB(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .74 .16 .06],...
                    'style'     , 'edit',...
                    'background', environment.colors.edit_bgcolor,...
                    'callback'  , @(varargin)callbacks('change_TOF', i, varargin{:}));
                handles.tab(sequence_tab).GAM.minalt(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .65 .16 .06],... 
                    'style'     , 'edit',...                 % changing this one's settings 
                    'background', environment.colors.edit_bgcolor,...% is an exceptional case:
                    'callback'  , @(varargin) callbacks('change_minimum_altitude', ...
                        i, 'check', varargin{:}));                                
                handles.tab(sequence_tab).GAM.shortlong(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .56 .16 .06],...
                    'style'     , 'popup',...
                    'background', environment.colors.edit_bgcolor,...
                    'string'    , {'short';'long';'optimize'},...
                    'callback'  , @(varargin)...
                            modify_settings('change_single_setting', ...
                            ['GAM.short_or_longway(', num2str(i),...
                            ')'], [], varargin{:}));
                handles.tab(sequence_tab).GAM.maxDeltaV(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .47 .16 .06],...
                    'style'     , 'edit',...
                    'background', environment.colors.edit_bgcolor,...
                    'callback'  , @(varargin)...
                            modify_settings('change_single_setting', ['GAM.max_DV(', num2str(i),...
                            ')'], [], varargin{:}));                    
                handles.tab(sequence_tab).GAM.DSM(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .38 .16 .06],...
                    'style'     , 'pushbutton',...                        
                    'string'    , ['DSM ', num2str(i)],...
                    'callback'  , @not_yet_done);
                handles.tab(sequence_tab).GAM.CompleteRevolutions(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .29 .16 .06],...
                    'style'     , 'popup',...
                    'background', environment.colors.edit_bgcolor,...
                    'string'    , {0:2; 'optimize'},...
                    'callback'  , @(varargin)...
                            modify_settings('change_single_setting', ['GAM.complete_revolutions(', ...
                            num2str(i),')'], [], varargin{:}));  
                handles.tab(sequence_tab).GAM.LoverD(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .20 .16 .06],...
                    'background', environment.colors.edit_bgcolor,...
                    'style'     , 'edit',...
                    'callback'  , @(varargin)...
                            modify_settings('change_single_setting', ...
                            ['GAM.LoverD(', num2str(i),')'], [], varargin{:})); 
                handles.tab(sequence_tab).GAM.type(i) = uicontrol(...
                    'parent'    , swingby_panel,...
                    'units'     , 'normalized',...
                    'position'  , [x .11 .16 .06],...
                    'background', environment.colors.edit_bgcolor,...
                    'style'     , 'popup',...
                    'value'     , 2,...
                    'string'    , {'un-powered', 'powered', 'aerograv'},...
                    'callback'  , @(varargin) callbacks('change_GAM_type', i, varargin{:}));
                
                
                handles.tab(sequence_tab).GAM.jettison(i) = uicontrol(...
                    'parent'    , handles.tab(sequence_tab).GAM_jettison_group,...
                    'units'     , 'normalized',...
                    'position'  , [(i-1)*0.26 .00 .26 1.0],...
                    'style'     , 'radio',...
                    'string'    , 'yes',...
                    'callback'  , @(varargin) ...
                            modify_settings('change_single_setting',...
                                            ['GAM.jettison(', num2str(i),')'],...
                                            [], varargin{:}));
            end
            
            % disable all but the first control
            structfun(@(x) set(x, 'enable', 'off'), handles.tab(sequence_tab).GAM);
            set([handles.tab(sequence_tab).GAM.number(1), ...
                 handles.tab(sequence_tab).GAM.body(1)], 'enable', 'on');
                
        %% Target panel
        
        target_panel = uipanel(...
            'parent'    , handles.tab(sequence_tab).panel,...
            'units'     , 'normalized',...
            'title'     , 'Target',...
            'position'  , [.83 .22 .16 .76]);
            uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'position'  , [.05 .885 .3 .06],...
                'style'     , 'text',...
                'string'    , 'Body:');        
            handles.tab(sequence_tab).target.body = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'position'  , [.35 .90 .6 .06],...
                'style'     , 'popup',...
                'background', environment.colors.edit_bgcolor,...
                'string'    , bodystrings([false; model.targetable]),...
                'callback'  , @(varargin) callbacks('target_body', varargin{:}));
            handles.tab(sequence_tab).target.TOF_LB = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'position'  , [.35 .81 .6 .06],...
                'style'     , 'edit',...
                'background', environment.colors.edit_bgcolor,...
                'callback'  , @(varargin)callbacks('change_TOF_target', varargin{:}));
            uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'position'  , [.05 .765 .3 .12],...
                'style'     , 'text',...
                'string'    , 'low. limit:'); 
            handles.tab(sequence_tab).target.TOF_UB = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'position'  , [.35 .72 .6 .06],...
                'style'     , 'edit',...
                'background', environment.colors.edit_bgcolor,...
                'callback'  , @(varargin)callbacks('change_TOF_target', varargin{:}));
             uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'position'  , [.05 .67 .3 .12],...
                'style'     , 'text',...
                'string'    , 'upp. limit:'); 
            % Select minor planet
            handles.tab(sequence_tab).MPTargetButton = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'position'  , [.05 .60 .9 .06],...
                'style'     , 'pushbutton',...
                'enable'    , 'off',...
                'string'    , 'Minor planet...',...
                'callback'  , @(varargin) callbacks('MP_target_body', varargin{:})); 
            % shortway/longway
            uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'position'  , [.05 .50 .95 .06],...
                'style'     , 'text',...
                'string'    , 'short/longway:');
            handles.tab(sequence_tab).target.shortlong = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'position'  , [.05 .46 .9 .06],...
                'background', environment.colors.edit_bgcolor,...
                'style'     , 'popup',...
                'string'    , {'short';'long';'optimize'},...
                'callback'  , @(varargin) modify_settings('change_single_setting', 'target.short_or_longway',...
                              [], varargin{:}));                 
            % complete revolutions            
            uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...                
                'position'  , [.05 .37 .95 .06],...
                'style'     , 'text',...
                'string'    , 'complete revolutions:');
            handles.tab(sequence_tab).target.CompleteRevolutions = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'background', environment.colors.edit_bgcolor,...
                'position'  , [.05 .33 .9 .06],...
                'style'     , 'popup',...
                'string'    , {0:2;'optimize'},...
                'callback'  , @(varargin) modify_settings('change_single_setting', 'target.complete_revolutions',...
                                [], varargin{:}));
             % DSM
            handles.tab(sequence_tab).target.DSM = uicontrol(...
                'parent'    , target_panel,...
                'units'     , 'normalized',...
                'horizontalalignment', 'left',...
                'position'  , [.05 .24 .9 .06],...
                'style'     , 'pushbutton',...
                'string'    , 'DSM 5',...
                'callback'  , @not_yet_done);                  
            
        %% Batch optimization
        
        handles.tab(sequence_tab).BatchOptimizeCheck = uicontrol(...
            'units'   , 'normalized',...
            'parent'  , handles.tab(sequence_tab).panel,...
            'style'   , 'checkbox',...
            'string'  , 'BATCH-optimization',...
            'position', [.42 .12 .15 .07],...         
            'callback', @(varargin){...
                            modify_settings('change_single_setting', 'BATCH.check', [], varargin{:}); 
                            callbacks('batch_optimization_check', varargin{:})});
        handles.tab(sequence_tab).BatchOptimizeButton = uicontrol(...
            'units'   , 'normalized',...
            'parent'  , handles.tab(sequence_tab).panel,...
            'style'   , 'pushbutton',...
            'string'  , 'Define...',...
            'position', [.42 .03 .15 .07],...
            'enable'  , 'off',...
            'callback', @(varargin) callbacks('batch_optimization_wrapper', varargin{:}));
     
    %% Arrival & post-processing tab
    
    % main panel
    handles.tab(arrival_tab).panel = uipanel(...        
        'position'  , [.01 .12 .985 .8],...                
        'visible'   , 'off');
    
    % Arrival type
    uicontrol(...
        'Parent'    , handles.tab(arrival_tab).panel,...
        'Units'     , 'normalized',...
        'horizontalalignment', 'left',...
        'Position'  , [0.03 0.868326180257511 0.292267365661861 0.0472103004291845],...
        'String'    , 'Arrival type',...
        'Style'     , 'text');
    handles.tab(arrival_tab).ArrivalType = uicontrol(...
        'Parent'    , handles.tab(arrival_tab).panel,...
        'Units'     , 'normalized',...
        'Background', environment.colors.edit_bgcolor,...
        'Position'  , [0.03 0.828326180257511 0.292267365661861 0.0472103004291845],...
        'String'    , {'Fly-by';'Orbit insertion';'Entry'},...
        'Style'     , 'popup',...         
        'callback'  , @(varargin) {...
                      callbacks('switch_arrival_type', varargin{:}),...
                      modify_settings('change_single_setting', 'arrival.type', [], varargin{:})});
                      
    % Custom costfunction
    handles.tab(arrival_tab).usr_costfun_arrival(1) = uicontrol(...
        'Parent'  , handles.tab(arrival_tab).panel,...
        'Units'   , 'normalized',...
        'Position', [0.03 0.748334763948498 0.244888597640891 0.0493562231759657],...
        'String'  , 'Use custom cost function for arrival',...
        'Style'   , 'checkbox',...   
        'callback', @(varargin){modify_settings('change_single_setting', ...
                            'arrival.user_cost_function', [], varargin{:})
                      callbacks('arrival_costfunction_check', varargin{:})});    
    handles.tab(arrival_tab).usr_costfun_arrival(2) = uicontrol(...
        'Parent'  , handles.tab(arrival_tab).panel,...
        'Units'   , 'normalized',...
        'Position', [0.28 0.75 0.11 0.05],...
        'String'  , 'Load...',...
        'enable'  , 'off',...
        'callback', @not_yet_done);    
    handles.tab(arrival_tab).usr_costfun_arrival(3) = uicontrol(...
        'Parent'  , handles.tab(arrival_tab).panel,...
        'Units'   , 'normalized',...
        'Position', [0.40 0.75 0.11 0.05],...
        'String'  , 'Parameters...',...
        'enable'  , 'off',...
        'callback', @not_yet_done);
    
    
    % Arrival constraints
        
    % Flyby
    arrival_constraint_panel{1} = uipanel(...
        'title'     , 'Arrival constraints',...
        'Parent'    , handles.tab(arrival_tab).panel,...
        'Units'     , 'normalized',...
        'Position',[0.0249017038007864 0.0450643776824034 0.485 0.663519313304721]);
    
    % Orbit insertion
    arrival_constraint_panel{2} = uipanel(...
        'title'     , 'Arrival constraints',...
        'Parent'    , handles.tab(arrival_tab).panel,...
        'Units'     , 'normalized',...
        'Visible'   , 'off',...
        'Position',[0.0249017038007864 0.0450643776824034 0.485 0.663519313304721]);
    
    % Entry
    arrival_constraint_panel{3} = uipanel(...
        'title'     , 'Arrival constraints',...
        'Parent'    , handles.tab(arrival_tab).panel,...
        'Units'     , 'normalized',...
        'Visible'   , 'off',...
        'Position',[0.0249017038007864 0.0450643776824034 0.485 0.663519313304721]);

    handles.tab(arrival_tab).arrival_constraints = arrival_constraint_panel;
    
        function arrival_handles = draw_arrival_elements(parent, titles, callbacks, units, implemented)

            if ~iscell(titles)
                titles = {titles};
                callbacks = {callbacks};
                units  = {units};
            end
            
            arrival_handles = cell(size(titles));            
            for ii = 1:numel(titles)
                
                y_offset = 0.94 - 0.14*ii;
                
                if implemented(ii)
                    editable = {'enable', 'on'};
                else
                    editable = {'enable', 'off'};
                end
                
                uicontrol(...
                    editable{:},...
                    'Parent'  , parent,...
                    'Units'   , 'normalized',...
                    'Position', [0.02 y_offset 0.45 0.075],...
                    'String'  , titles{ii},...
                    'horizontalalignment', 'left',...
                    'Style'   ,'text');
                arrival_handles{ii} = uicontrol(...
                    editable{:},...
                    'Parent'    , parent,...
                    'Units'     , 'normalized',...
                    'Background', environment.colors.edit_bgcolor,...
                    'Position'  , [0.50 y_offset 0.30 0.1],...
                    'Style'     , 'edit',...
                    'callback', callbacks{ii});
                uicontrol(...
                    'Parent'  , parent,...
                    editable{:},...
                    'Units'   , 'normalized',...
                    'Position', [0.85 y_offset 0.1 0.07],...
                    'horizontalalignment', 'left',...
                    'String'  , units{ii},...
                    'Style'   , 'text');
            end
            
            if numel(arrival_handles) == 1
                arrival_handles = arrival_handles{1}; end
            
        end
    
        % Flyby
        % ------------------
    
        handles.tab(arrival_tab).MaxArrivalC3 = draw_arrival_elements(...
            arrival_constraint_panel{1},...
            'Max. C3 at arrival:',...
            @(varargin) modify_settings('change_single_setting', 'arrival.constraints.max_C3', [], varargin{:}),...
            'km2/s2',...
            true);
        
        
%         % C3 constraint
%         uicontrol(...
%             'Parent'  , arrival_constraint_panel{1},...
%             'Units'   , 'normalized',...
%             'Position',[0.02 0.815 0.45 0.075],...
%             'String'  ,'Max. C3 at arrival:',...
%             'horizontalalignment', 'left',...
%             'Style'   ,'text');
%         handles.tab(arrival_tab).MaxArrivalC3 = uicontrol(...
%             'Parent'    , arrival_constraint_panel{1},...
%             'Units'     , 'normalized',...
%             'Background', environment.colors.edit_bgcolor,...        
%             'Position'  , [0.50 0.8 0.30 0.1],...
%             'Style'     , 'edit',...   
%             'callback', @(varargin)...
%                       modify_settings('change_single_setting', 'arrival.constraints.max_C3', [], varargin{:}));    
%         uicontrol(...
%             'Parent'  , arrival_constraint_panel{1},...
%             'Units'   , 'normalized',...
%             'Position', [0.85 0.8 0.1 0.07],...
%             'horizontalalignment', 'left',...
%             'String'  , 'km2/s2',...
%             'Style'   , 'text');
        
                
        % Orbit insertion 
        % ------------------
    
        orbit_insertion_handles = draw_arrival_elements(...
            arrival_constraint_panel{2},...
            {'apocenter altitude', 'pericenter altitude', 'inclination'},...            
            {@(varargin) modify_settings('change_single_setting', 'arrival.apocenter_altitude' , [], varargin{:}),...
             @(varargin) modify_settings('change_single_setting', 'arrival.pericenter_altitude', [], varargin{:}),...
             @(varargin) modify_settings('change_single_setting', 'arrival.inclination'        , [], varargin{:})
            },...
            {'km', 'km', 'degrees'},...
            false(1,3));
                    
        handles.tab(arrival_tab).ApocenterAltitude  = orbit_insertion_handles{1};
        handles.tab(arrival_tab).PericenterAltitude = orbit_insertion_handles{2};
        handles.tab(arrival_tab).Inclination        = orbit_insertion_handles{3};
        
        
        % Entry 
        % ------------------
        
        entry_handles = draw_arrival_elements(...
            arrival_constraint_panel{3},...
            {'Insertion gravity loss:', 'Mass released before insertion:'},...            
            {@(varargin) modify_settings('change_single_setting', 'arrival.gravity_loss' , [], varargin{:}),...
             @(varargin) modify_settings('change_single_setting', 'arrival.mass_released', [], varargin{:})
            },...
            {'%', 'kg'},...
            false(1,2));
        
        handles.tab(arrival_tab).ArrivalGravityLoss   = entry_handles{1};
        handles.tab(arrival_tab).InsertionMassRelease = entry_handles{2};
        
        
    % Post-processing panel
    handles.tab(arrival_tab).post_processing_panel = uipanel(...
        'title'     , 'Post-Processing',...
        'Parent'    , handles.tab(arrival_tab).panel,...
        'Units'     , 'normalized',...
        'Position',[0.53 0.04 0.45 0.95]);  
    
        % Main Checkbox
        handles.tab(arrival_tab).post_processing.check = uicontrol(...
            'Parent'   , handles.tab(arrival_tab).post_processing_panel,...
            'style'    , 'checkbox',...
            'units'    , 'normalized',...
            'string'   , 'Post-process global results...',...            
            'Position' , [0.06, 0.93, 0.8, 0.05],...
            'callback' , @(varargin) {...
                         callbacks('enable_postprocessing', varargin{:});
                         modify_settings('change_single_setting', 'postprocessing.check', [], varargin{:})});
        
        % select post-processor
        handles.tab(arrival_tab).post_processing.post_processor(1) = uicontrol(...
            'Parent'   , handles.tab(arrival_tab).post_processing_panel,...
            'style'    , 'text',...
            'horizontalalignment', 'left',...
            'units'    , 'normalized',...
            'string'   , 'Post-processor:',... 
            'enable'   , 'off',...
            'Position' , [0.07, 0.83, 0.3, 0.05]);
        handles.tab(arrival_tab).post_processing.post_processor(2) = uicontrol(...
            'Parent'   , handles.tab(arrival_tab).post_processing_panel,...
            'style'    , 'popup',...
            'units'    , 'normalized',...
            'enable'   , 'off',...
            'string'   , {'(none)', environment.plugin_info.postprocessors(:).name},...     
            'Background', environment.colors.edit_bgcolor,...
            'Position' , [0.35, 0.85, 0.6, 0.05],...
            'callback' , @(varargin) callbacks('select_postprocessor', varargin{:}));      
           
    
    %% Algorithms tab
    
    % main panel
    handles.tab(algorithms_tab).panel = uipanel(...        
        'position'  , [.01 .12 .985 .8],...                
        'visible'   , 'off');
    
    % global optimization panel
    glob_panel = uipanel(...
        'Parent'  , handles.tab(algorithms_tab).panel,...
        'Title'   , 'First-order (global optimization)',...                
        'Position', [0.020 0.523 0.598 0.456]);
        
        % optimizer
        handles.tab(algorithms_tab).glob_opt_group = uibuttongroup(...
            'Parent'  , glob_panel,...
            'Title'   , 'Optimizer',...                        
            'Position', [0.029 0.0297 0.459 0.856],...
            'SelectionChangeFcn', @(varargin) modify_settings('change_single_setting',...
                'optimize.global.optimizer', 'handles.tab(algorithms_tab).global_optimizer',...
                varargin{:})); 
            % GODLIKE
            handles.tab(algorithms_tab).global_optimizer(1) = uicontrol(...
                'Parent'  , handles.tab(algorithms_tab).glob_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.0731707317073171 0.789808917197455 0.907317073170732 0.165605095541401],...
                'String'  , 'GODLIKE',...
                'Style'   , 'radiobutton',...
                'TooltipString', ['(G)lobal (O)ptimum (D)etermination by (L)inking and ',...
                                  '(I)nterchanging (K)indred (E)valuators']);    
            % Globalized Nelder-Mead
            handles.tab(algorithms_tab).global_optimizer(2) = uicontrol(...
                'Parent'  , handles.tab(algorithms_tab).glob_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.073 0.554140127388537 0.897560975609756 0.178343949044586],...
                'String'  , 'Repeated Nelder-Mead',...
                'Style'   , 'radiobutton');    
            % Repeated L-BFGS Quasi-Newton
            handles.tab(algorithms_tab).global_optimizer(3) = uicontrol(...
                'Parent'  , handles.tab(algorithms_tab).glob_opt_group,...
                'Units'   ,'normalized',...
                'Position',[0.0731707317073171 0.286624203821658 0.892682926829268 0.210191082802548],...
                'String'  , 'Repeated L-BFGS Quasi-Newton',...
                'Style'   , 'radiobutton');    
            % Setting button        
            uicontrol(...
                'Parent'  , handles.tab(algorithms_tab).glob_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.0731707317073171 0.0828025477707021 0.858536585365854 0.152866242038217],...
                'String'  , 'Settings...',...
                'callback', @(varargin) callbacks('optimization_parameters', varargin{:}));

        % Low-thrust method    
        low_approx_panel = uibuttongroup(...
            'Parent'  , glob_panel,...
            'Title'   , 'Low-thrust approximation',...
            'Position', [0.525274725274725 0.0247524752475248 0.465934065934066 0.861386138613861],...
            'SelectionChangeFcn', @(varargin)...
            modify_settings('change_single_setting', 'optimize.global.low_thrust_approximation', ...
            'handles.tab(algorithms_tab).LowThrustApproximation', varargin{:})); 
            % Exposins
            handles.tab(algorithms_tab).LowThrustApproximation(1) = uicontrol(...
                'Parent'  , low_approx_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0625 0.563291139240506 0.802884615384615 0.234177215189873],...
                'String'  , 'Exponential Sinusoids',...
                'Style'   , 'radiobutton');            
            % Equinoctial elements
            handles.tab(algorithms_tab).LowThrustApproximation(2) = uicontrol(...
                'Parent'  , low_approx_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0625 0.30379746835443 0.769230769230769 0.29746835443038],...
                'String'  ,'Equinoctial elements',...
                'Style'   ,'radiobutton',...
                'enable'  , 'off');            
            % Parameters button 
            uicontrol(...
                'Parent'  , low_approx_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0625 0.0822784810126582 0.807692307692308 0.158227848101266],...
                'String'  , 'Parameters...',...
                'callback', @not_yet_done);
            
    % Objectives panel
    obj_panel = uipanel(...
        'Parent'  , handles.tab(algorithms_tab).panel,...
        'Title'   , 'Objectives',...
        'Position', [0.0260416666666667 0.0209205020920502 0.265625 0.476987447698745]);
        % Max Payload mass (min. Delta-V)        
        handles.tab(algorithms_tab).MaxPayloadObjective = uicontrol(...
            'Parent'  , obj_panel,...
            'Units'   , 'normalized',...
            'Position', [0.06 0.811320754716981 0.895 0.108490566037736],...
            'String'  , 'Maximum payload mass',...
            'Style'   , 'checkbox',...
            'callback', @(varargin){modify_settings('change_single_setting', ...
                    'optimize.objectives.max_mass', [], varargin{:});
                    callbacks('objectives_selection', varargin{:})});
        % minimum time-of-flight
        handles.tab(algorithms_tab).MinTOFObjective = uicontrol(...
            'Parent'  , obj_panel,...
            'Units'   , 'normalized',...
            'Position', [0.06 0.542452830188679 0.91 0.108490566037736],...
            'String'  , 'Minimum Time of flight',...
            'Style'   , 'checkbox',...
            'callback', @(varargin){modify_settings('change_single_setting', ...
                    'optimize.objectives.min_tof', [], varargin{:});
                    callbacks('objectives_selection', varargin{:})});          
        % costfunctions defined in plugins
        handles.tab(algorithms_tab).OtherObjectives.check = uicontrol(...
            'Parent'  , obj_panel,...
            'Units'   , 'normalized',...
            'Position', [0.06 0.25 0.88 0.108490566037736],...
            'String'  , 'Other objectives',...
            'Style'   , 'checkbox',...
            'callback', @(varargin){modify_settings('change_single_setting', ...
                    'optimize.objectives.other.use', [], varargin{:});
                    callbacks('objectives_selection', varargin{:})});
        % Load costfunctions from plugins
        handles.tab(algorithms_tab).OtherObjectives.button = uicontrol(...
            'Parent'  , obj_panel,...
            'Units'   , 'normalized',...
            'Position', [0.06 0.0990566037735851 0.855 0.108490566037736],...
            'enable'  , 'off',...
            'String'  , 'Load...',...
            'Style'   , 'pushbutton',...
            'callback', @(varargin) callbacks('select_costfcn_plugin', varargin{:}));
        
    % Second-order optimization panel    
    loc_panel = uipanel(...
        'Parent'  , handles.tab(algorithms_tab).panel,...,...
        'Title'   , 'Second-order (local optimizaton)',...
        'Position', [0.302083333333333 0.0209205020920502 0.6796875 0.479079497907949]);
        
        % Optimizer
        loc_opt_group = uibuttongroup(...
            'Parent'  , loc_panel,...
            'Title'   , 'Optimizer',...
            'Position', [0.0135135135135135 0.0187793427 0.318532818 0.89671361502],...
            'SelectionChangeFcn', @(varargin)...
                modify_settings('change_single_setting', 'optimize.local.optimizer', ...
                'handles.tab(algorithms_tab).local_optimizer', varargin{:}));
            % FMINCON (if available)
            handles.tab(algorithms_tab).local_optimizer(1) = uicontrol(...
                'Parent'  , loc_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.0248447204968944 0.748571428571428 0.869565217391304 0.131428571428571],...
                'String'  , 'FMINCON (SQP)',...
                'Style'   , 'radiobutton');  
                if ~environment.optim_toolbox_available
                    set(local_optimizer(1), 'enable', 'off');
                end                    
            % constrained Nelder-Mead
            handles.tab(algorithms_tab).local_optimizer(2) = uicontrol(...
                'Parent'  , loc_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.0248447204968944 0.502857142857143 0.91304347826087 0.131428571428571],...
                'String'  , 'Constr. Nelder-Mead',...
                'Style'   , 'radiobutton');    
            % constrained Quasi-Newton
            handles.tab(algorithms_tab).local_optimizer(3) = uicontrol(...
                'Parent'  , loc_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.0248447204968944 0.257142857142857 0.91304347826087 0.137142857142857],...
                'String'  , 'Quasi-Newton (L-BFGS)',...
                'Style'   , 'radiobutton');    
            % options button
            uicontrol(...
                'Parent'  , loc_opt_group,...
                'Units'   , 'normalized',...
                'Position', [0.031055900621118 0.0457142857142857 0.925465838509317 0.142857142857143],...
                'String'  , 'Options...',...
                'callback', @not_yet_done);
     
        % integrator panel
        int_panel = uibuttongroup(...
            'Parent'  , loc_panel,...
            'Title'   , 'Integrators',...
            'Position', [0.335907335907336 0.0187793427230047 0.32046332046332 0.896713615023474],...
            'SelectionChangeFcn', @(varargin)...
                    modify_settings('change_single_setting', 'optimize.local.integrator', ...
                    'handles.tab(algorithms_tab).integrator', varargin{:}));
            % ODE4(5)
            handles.tab(algorithms_tab).integrator(1) = uicontrol(...
                'Parent'  , int_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0493827160493827 0.742857142857143 0.537037037037037 0.131428571428571],...
                'String'  , 'ODE4(5)',...
                'Style'   , 'radiobutton');    
            % RKN8(6)
            handles.tab(algorithms_tab).integrator(2) = uicontrol(...
                'Parent'  , int_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0493827160493827 0.497142857142857 0.537037037037037 0.131428571428571],...
                'String'  , 'RKN8(6)',...
                'Style'   , 'radiobutton');   
            % RKN12(10)
            handles.tab(algorithms_tab).integrator(3) = uicontrol(...
                'Parent'  , int_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0493827160493827 0.251428571428572 0.537037037037037 0.131428571428571],...
                'String'  , 'RKN12(10)',...                
                'Style'   , 'radiobutton');   
            % options button
            uicontrol(...
                'Parent'  , int_panel,...
                'Units'   , 'normalized',...
                'Position', [0.0493827160493827 0.0571428571428572 0.919753086419753 0.142857142857143],...
                'String'  , 'Options...',...
                'callback', @not_yet_done);

        % Method
        loc_method_group = uibuttongroup(...
            'Parent'  , loc_panel,...
            'Title'   , 'Method',...
            'Position',[0.662162162162162 0.0187793427230047 0.32046332046332 0.906103286384977],...
            'SelectionChangeFcn', @(varargin)...
                    modify_settings('change_single_setting', 'optimize.local.method', ...
                    'handles.tab(algorithms_tab).low_thrust_optimization_method', varargin{:}));
                % Sims & Flanagan's method
                handles.tab(algorithms_tab).low_thrust_optimization_method(1) = uicontrol(...
                    'Parent'  , loc_method_group,...
                    'Units'   , 'normalized',...
                    'Position', [0.037037037037037 0.621468926553672 0.944444444444444 0.135593220338983],...
                    'String'  , 'Patched micro-conics',...
                    'Style'   , 'radiobutton',...
                    'TooltipString', 'This is the method developed by Sims& Flanagan');  
                % Collocation
                handles.tab(algorithms_tab).low_thrust_optimization_method(2) = uicontrol(...
                    'Parent'  , loc_method_group,...
                    'Units'   , 'normalized',...
                    'Position', [0.037037037037037 0.395480225988701 0.944444444444444 0.152542372881356],...
                    'String'  , 'Collocation',...
                    'Style'   , 'radiobutton');  
                % Parameters button
                uicontrol(...
                    'Parent'  , loc_method_group,...
                    'Units'   , 'normalized',...
                    'Position', [0.0493827160493827 0.0621468926553672 0.919753086419753 0.141242937853107],...
                    'String'  , 'Parameters...',...
                    'callback', @not_yet_done);
                
    % Ephemerides panel        
    eph_panel = uibuttongroup(...
        'Parent'  , handles.tab(algorithms_tab).panel,...,...
        'Title'   , 'Ephemerides generator',...
        'Position', [0.630208333333333 0.527196652719665 0.346354166666667 0.449790794979079],...
        'SelectionChangeFcn', @(varargin)...
                    modify_settings('change_single_setting', 'optimize.ephemerides', ...
                    'handles.tab(algorithms_tab).Ephemerides', varargin{:}));
         %JPL / HORIZONS system             
         handles.tab(algorithms_tab).Ephemerides(1) = uicontrol(...
            'Parent'  , eph_panel,...
            'Units'   , 'normalized',...
            'Position', [0.0954198473282442 0.688442211055277 0.66793893129771 0.115577889447236],...
            'String'  , 'JPL / DE405',...
            'Style'   , 'radiobutton'); 
        % Kepler (direct)        
        handles.tab(algorithms_tab).Ephemerides(2) = uicontrol(...
            'Parent'  , eph_panel,...
            'Units'   , 'normalized',...
            'Position', [0.0954198473282442 0.437185929648241 0.816793893129771 0.115577889447236],...
            'String'  , 'Kepler (direct)',...
            'Style'   , 'radiobutton'); 
        % Kepler (5th order polynomial interpolation)        
        handles.tab(algorithms_tab).Ephemerides(3) = uicontrol(...
            'Parent'  , eph_panel,...
            'Units'   , 'normalized',...
            'Position', [0.0954198473282443 0.165829145728643 0.816793893129771 0.135678391959799],...
            'String'  , 'Kepler (quintic interpolation)',...
            'enable'  , 'off',...
            'Style'   , 'radiobutton');   
        
    %% Output tab
    
    % main panel
    handles.tab(output_tab).panel = uipanel(...        
        'position'  , [.01 .12 .985 .8],...                
        'visible'   , 'off');
    
        % Tab buttons
        handles.tab(output_tab).tab(Pareto_tab).button = uicontrol(...
            'units'   , 'normalized',...
            'style'   , 'togglebutton', ...
            'enable'  , 'off',...
            'parent'  , handles.tab(output_tab).panel,...
            'string'  , 'Pareto front',...
            'position', [.005, .93, .12, .05],...
            'callback', @(varargin) callbacks('show_output_tab', Pareto_tab, varargin{:}));
        handles.tab(output_tab).tab(trajectory_tab).button = uicontrol(...
            'units'   , 'normalized',...
            'style'   , 'togglebutton', ...
            'enable'  , 'off',...
            'value'   , 1,...
            'parent'  , handles.tab(output_tab).panel,...
            'string'  , 'Trajectory',...
            'position', [.13, .93, .12, .05],...
            'callback', @(varargin) callbacks('show_output_tab', trajectory_tab, varargin{:}));
        handles.tab(output_tab).tab(central_body_speed).button = uicontrol(...
            'units'   , 'normalized',...
            'style'   , 'togglebutton', ...
            'enable'  , 'off',...
            'parent'  , handles.tab(output_tab).panel,...
            'string'  , 'Central speed',...
            'position', [.255, .93, .12, .05],...
            'callback', @(varargin) callbacks('show_output_tab', central_body_speed, varargin{:}));
        handles.tab(output_tab).tab(post_processing).button = uicontrol(...
            'units'   , 'normalized',...
            'style'   , 'togglebutton', ...
            'enable'  , 'off',...
            'parent'  , handles.tab(output_tab).panel,...
            'string'  , 'Post-processing',...
            'position', [.38, .93, .12, .05],...
            'callback', @(varargin) callbacks('show_output_tab', post_processing, varargin{:}));
        handles.tab(output_tab).tab(BATCH_optimization).button = uicontrol(...
            'units'   , 'normalized',...
            'style'   , 'togglebutton', ...
            'enable'  , 'off',...
            'parent'  , handles.tab(output_tab).panel,...
            'string'  , 'BATCH results',...
            'position', [.505, .93, .12, .05],...
            'callback', @(varargin) callbacks('show_output_tab', BATCH_optimization, varargin{:}));
        handles.tab(output_tab).tab(optimization_statistics).button = uicontrol(...
            'units'   , 'normalized',...
            'style'   , 'togglebutton', ...
            'enable'  , 'off',...
            'parent'  , handles.tab(output_tab).panel,...
            'string'  , 'Statistics...',...
            'position', [.630, .93, .12, .05],...
            'callback', @(varargin)callbacks('show_output_tab',optimization_statistics,varargin{:}));
        
        % Pareto tab        
        handles.tab(output_tab).tab(Pareto_tab).panel = uipanel(...
            'parent'    , handles.tab(output_tab).panel,...
            'visible'   , 'off',...
            'position'  , [0, 0, 1, .92]);            
            % Axes
            handles.tab(output_tab).tab(Pareto_tab).Pareto_pane(1) = axes(...
                'parent'  , handles.tab(output_tab).tab(Pareto_tab).panel,...
                'units'   , 'normalized',...
                'position', [0.07 0.1 0.6 0.85]); 
            % info pane
            handles.tab(output_tab).tab(Pareto_tab).Pareto_infopane_panel = uipanel(...
                'parent'  , handles.tab(output_tab).tab(Pareto_tab).panel,...
                'position', [0.68 0.25 0.30 0.70]);
            % info pane
            handles.tab(output_tab).tab(Pareto_tab).Pareto_pane(2) = uicontrol(...
                'parent'  , handles.tab(output_tab).tab(Pareto_tab).Pareto_infopane_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'position', [0,0,1,1]);   
            % separate plot button
            uicontrol(...
                'parent'  , handles.tab(output_tab).tab(Pareto_tab).panel,...
                'units'   , 'normalized',...
                'style'   , 'pushbutton',...  
                'string'  , 'External plot >>',...
                'position', [0.68, 0.18, 0.30, 0.05],...
                'callback', @(varargin) callbacks('separate_plots', Pareto_tab, varargin{:}));
            
        % Trajectory tab        
        handles.tab(output_tab).tab(trajectory_tab).panel = uipanel(...
            'parent'    , handles.tab(output_tab).panel,...
            'visible'   , 'on',...
            'position'  , [0, 0, 1, .92]);        
            % Axes
            handles.tab(output_tab).tab(trajectory_tab).trajectory_pane(1) = axes(...
                'parent'  , handles.tab(output_tab).tab(trajectory_tab).panel,...
                'units'   , 'normalized',...
                'position', [0.07 0.1 0.6 0.85]);            
            % info pane
            handles.tab(output_tab).tab(trajectory_tab).trajectory_infopane_panel = uipanel(...
                'parent'  , handles.tab(output_tab).tab(trajectory_tab).panel,...
                'position', [0.68 0.24 0.30 0.71]);
            handles.tab(output_tab).tab(trajectory_tab).trajectory_pane(2) = uicontrol(...
                'parent'  , handles.tab(output_tab).tab(trajectory_tab).trajectory_infopane_panel,...
                'units'   , 'normalized',...
                'style'   , 'edit',...                
                'horizontalalignment', 'left',...                
                'min'     , 1,...
                'max'     , 250,...
                'position', [0,0,1,1]);
            % reset field button
            uicontrol(...
                'parent'  , handles.tab(output_tab).tab(trajectory_tab).panel,...
                'units'   , 'normalized',...
                'style'   , 'pushbutton',...  
                'string'  , 'Reset field',...
                'position', [0.68, 0.17, 0.30, 0.05],...
                'callback', @(varargin) callbacks('reset_infopane', ...
                   handles.tab(output_tab).tab(trajectory_tab).trajectory_pane(2), varargin{:}));            
            % separate plot button
            uicontrol(...
                'parent'  , handles.tab(output_tab).tab(trajectory_tab).panel,...
                'units'   , 'normalized',...
                'style'   , 'pushbutton',...  
                'string'  , 'External plot >>',...
                'position', [0.68, 0.11, 0.30, 0.05],...
                'callback', @(varargin) callbacks('separate_plots', trajectory_tab, varargin{:}));
            % invert colors
            uicontrol(...
                'parent'  , handles.tab(output_tab).tab(trajectory_tab).panel,...
                'units'   , 'normalized',...
                'style'   , 'pushbutton',...  
                'string'  , 'Invert colors',...
                'position', [0.68, 0.05, 0.30, 0.05],...
                'callback', @(varargin) callbacks('invert_colors', varargin{:}));
        
        % Speed w.r.t. Central Body tab
        handles.tab(output_tab).tab(central_body_speed).panel = uipanel(...
            'parent'    , handles.tab(output_tab).panel,...
            'visible'   , 'off',...
            'position'  , [0, 0, 1, .92]);
            % Axes
            handles.tab(output_tab).tab(central_body_speed).central_body_speed_pane = axes(...
                'parent'  , handles.tab(output_tab).tab(central_body_speed).panel,...
                'units'   , 'normalized',...
                'position', [0.07 0.1 0.90 0.85]);   
            
       % post processing    
       % (the exact strings etc. are generated in GENERATE_OUTPUT*() )
       handles.tab(output_tab).tab(post_processing).panel = uipanel(...
            'parent'    , handles.tab(output_tab).panel,...
            'visible'   , 'off',...
            'position'  , [0, 0, 1, .92]);        
            % UITABLE's title
            handles.tab(output_tab).tab(post_processing).postprocessor_title =  uicontrol(...
                'parent'  , handles.tab(output_tab).tab(post_processing).panel,...
                'style', 'text',...
                'string', {},...
                'position', [.07 .90 .85 .07],...
                'units'   , 'normalized',...
                'horizontalalignment', 'center');
            % make UITABLE                
            handles.tab(output_tab).tab(post_processing).postprocessor_infopane = uitable(...
                'parent'  , handles.tab(output_tab).tab(post_processing).panel,...
                'units'   , 'normalized',...
                'position', [.07 .07 .85 .80]);                
       
       % BATCH optimization
%        output_tab_tab(BATCH_optimization) = 
       
       % optimization statistics       
       handles.tab(output_tab).tab(optimization_statistics).panel = uipanel(...
            'parent'    , handles.tab(output_tab).panel,...
            'visible'   , 'off',...
            'position'  , [0, 0, 1, .92]);
        
            % first order
            firstorder_statistics_panel = uipanel(...
                'parent'  , handles.tab(output_tab).tab(optimization_statistics).panel,...
                'position', [0.02 0.02 0.47 0.95],...
                'title'   , 'Global optimiziation');
            handles.tab(output_tab).tab(optimization_statistics).firstorder_statistics_pane(1) = ...
                uicontrol(...
                'parent'  , firstorder_statistics_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [0, 0, 0.45, 1]);
            handles.tab(output_tab).tab(optimization_statistics).firstorder_statistics_pane(2) =...
                uicontrol(...
                'parent'  , firstorder_statistics_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'horizontalalignment', 'center',...
                'position', [0.45, 0, 0.05, 1]);
            handles.tab(output_tab).tab(optimization_statistics).firstorder_statistics_pane(3) = ...
                uicontrol(...
                'parent'  , firstorder_statistics_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [0.5, 0, 0.45, 1]);    
            
            % second order
            secondorder_statistics_panel = uipanel(...
                'parent'  , handles.tab(output_tab).tab(optimization_statistics).panel,...
                'position', [0.51 0.02 0.47 0.95],...
                'title'   , 'Local optimiziation');
            handles.tab(output_tab).tab(optimization_statistics).secondorder_statistics_pane(1) = ...
                uicontrol(...
                'parent'  , secondorder_statistics_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [0, 0, 0.45, 1]);
            handles.tab(output_tab).tab(optimization_statistics).secondorder_statistics_pane(2) = ...
                uicontrol(...
                'parent'  , secondorder_statistics_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'horizontalalignment', 'center',...
                'position', [0.45, 0, 0.05, 1]);
            handles.tab(output_tab).tab(optimization_statistics).secondorder_statistics_pane(3) = ...
                uicontrol(...
                'parent'  , secondorder_statistics_panel,...
                'units'   , 'normalized',...
                'style'   , 'text',...
                'horizontalalignment', 'left',...
                'position', [0.5, 0, 0.45, 1]);
    
    %% Progress bar, optimize & cancel button
    
    % Progress bar
    handles.ProgressBar = axes(...
        'units'     , 'normalized',...
        'HitTest'   , 'off',...
        'XLim'      , [0 1],...
        'YLim'      , [0 1],...
        'Box'       , 'on', ...
        'Position'  , [.23 .02 .64 .045],...
        'XTick'     , [], ...
        'YTick'     , [], ...
        'XTickLabel', [],...
        'YTickLabel', [], ...
        'drawmode'  , 'fast',...
        'color'     , environment.colors.window_bgcolor);
    
    % Big-ass OPTIMIZE! button
    handles.OptimizeButton = uicontrol(...
        'units'   , 'normalized',...
        'Style'   , 'pushbutton', ...
        'String'  , 'OPTIMIZE!', ...
        'FontSize', 18,...
        'position', [.01, .016, .20, .05],...
        'Callback', @optimize_button);

    % cancel button
    handles.CancelButton = uicontrol(...
        'units'   , 'normalized',...
        'Style'   , 'pushbutton', ...
        'String'  , 'Cancel', ...
        'position', [.89, .016, .10, .05],...
        'Enable'  , 'off',...
        'userdata', 0,...
        'Callback', @(x,y)set(x, 'UserData', 1));
    % also initialize the associated function
    cancel_button_pressed(handles.CancelButton);    
    
    %% Finish main window
    
    % set window title    
    set(MainWin, 'Name' , [environment.program_name,...
        ' - Accurate Optimization of Multiple Gravity-Assist Missions']);
        
    % put all data in main window's application data field
    setappdata(MainWin, 'calculation', calculation);
    setappdata(MainWin, 'settings'   , settings   );
    setappdata(MainWin, 'environment', environment);
    setappdata(MainWin, 'constants'  , constants  );
    setappdata(MainWin, 'model'      , model      );
    setappdata(MainWin, 'handles'    , handles    );
    
    % Set initial tabs
    current_tab = launch_tab;   current_output_tab = trajectory_tab;
        
    % initialize progress bar
    progress_bar({environment.colors.window_bgcolor, handles.ProgressBar});    
    
    % set all values according to default settings
    modify_settings('change_all_settings'); 
    
    % check the maximum Delta-V constraint versus Tsjiolkovskii's equation 
    % (user's settings might screw this up)
    callbacks('max_total_DV_check', 'no_warning', handles.tab(sequence_tab).MaxTotalDeltaV);
    
    % move the gui to the center of the figure and make window visible
    movegui(MainWin, 'center');  set(MainWin, 'Visible', 'on'); 
    
end

%% Main window close function 

% close main window 
function close_main_window(varargin)
    
    %% confirmation and save
    
    % get handle
    global MainWin
    % get relevant data
    environment = getappdata(MainWin, 'environment');
    dirty       = get(MainWin, 'UserData');
    % ask to save or not
    if strcmpi(dirty, 'dirty')
        exityn = questdlg('The results from the last optimization have not been saved.',...
        'Confirm Exit', 'Exit without saving', 'Save data & Exit', 'Cancel', 'Cancel');        
    % confirm exit (default)
    else
        exityn = questdlg(['Exit ', environment.program_name,': Are you sure?'],...
        'Confirm Exit', 'Yes', 'No', 'No');
    end   
    % first save the data
    if strcmpi(exityn, 'Save data & Exit')   
        if ~callbacks('save_results')
            return; end
    % just return if cancel or no pressed        
    elseif isempty(exityn) || any(strcmpi(exityn, {'Cancel';'No'})) 
        return
    end
    
    %% reset system defaults
    
    % reset the path     
    path(environment.pathing.prevpath);  
    % don't forget the 'GUI' subdir
    rmpath([environment.pathing.rootdir, filesep, 'GUI']);
    
    %% kill window & remove data
    
    % kill window
    delete(MainWin);   
    % clear all and everything from the workspace
    clear all
    % switch warnings back on
    warning('on')%#ok       
    
end % close main window
